[54]
아래와 같이 변수에 값이 들어 있습니다.
exchang함수에 x변수에 값을 넣으면 y로 변환하는 함수를 만드세요.

x = ["귀도","반","로섬"]
y = ["Guido","van", "Rossum"]



[Answer]

<올바른 답>

def exchange(x):
	x=x[:]			# x변수에 있는 값을 전부 x에 넣어주자는 뜻
				# 얘를 써야하는지 안써야하는지가 key point
				# 안써주면 아래 for문에서 x안의 값이 모두 y값으로 대체됨
				# 변수를 copy할 때는 주의해야한다.
	for i in range(len(x)):
		x[i] = y[i]
	print(x)

exchange(x)	# ['Guido', 'van', 'Rossum']
print(x)		# ['귀도', '반', '로섬']
print(y)		# ['Guido', 'van', 'Rossum']



<틀린 답>
# 이렇게 하면 그냥 x가 y로 대체되어버림(원본이 사라져버림)
# y = ["Guido","van", "Rossum"] => x = ["Guido","van", "Rossum"]
# y와 x의 id가 동일해져버림

def exchang(x):

	for i in range(len(x)):
		x[i] = y[i]
	print(x)

exchang(x)	# ['Guido', 'van', 'Rossum']
print(x)		# ['Guido', 'van', 'Rossum']
print(y)		# ['Guido', 'van', 'Rossum']








#-----------------------------------------------------------------------------#
	현장에서 주의해야하는 copy 설명(copy와 deep copy)
#-----------------------------------------------------------------------------#

<경우1: copy>

# 이렇게 하면 안됨
# 이렇게 해버리면 한쪽의 변화가 다른쪽에도 영향을 미침
# 변수 카피,복제할때 조심하기!!!!!!!!

a = [1,2,3]

b=a     # 변수를 카피할때 이렇게만 해버리면 "변수이름만 다른거고" 같은 메모리를 보는 것이기 때문에 "둘이 동일화"됨

b			# [1, 2, 3]

print(a,b)		# [1, 2, 3] [1, 2, 3]

print(id(a),id(b))  	# 149726152 149726152 : 주소값까지 카피해버림

a.append(4)		# [1, 2, 3, 4] [1, 2, 3, 4]

print(a,b)



<경우2: deep copy>

# 해결방안
# 복제를 해주더라도 다른 메모리를 사용하면서 같은 값으로 복제되게 해주려면 "c=a[:]" 이렇게 해줘야함

c=a[:]      # 이렇게 복제해줘야함

print(a,b,c)		# [1, 2, 3, 4] [1, 2, 3, 4] [1, 2, 3, 4]

print(id(a),id(b),id(c))	# 149726152 149726152 149965512

a.append(5)

print(a,b,c)		# [1, 2, 3, 4, 5] [1, 2, 3, 4, 5] [1, 2, 3, 4]

print(id(a),id(b),id(c))	# 149726152 149726152 149965512



import copy

d = copy.deepcopy(a)

print(id(a),id(d))	# 149726152 149966664

a.append(6)

print(a,d)		# [1, 2, 3, 4, 5, 6] [1, 2, 3, 4, 5]

#-----------------------------------------------------------------------------#
