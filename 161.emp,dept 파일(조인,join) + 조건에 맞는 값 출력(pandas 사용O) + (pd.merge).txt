[161]
emp_new.csv, dept_new.csv 파일 데이터에서 50번 부서 사원들 중에 급여가 5000 이상인 사원의 이름, 부서 이름을 출력하세요.


[Answer]
pd.merge(emp[['name','deptno']][emp['sal']>=5000],dept[['deptno','dname']][dept['deptno']==50],on='deptno')
       name  deptno     dname
0     Weiss    50.0  Shipping
1     Fripp    50.0  Shipping
2  Kaufling    50.0  Shipping
3   Vollman    50.0  Shipping
4   Mourgos    50.0  Shipping


pd.merge(emp[['name','deptno']][emp['sal']>=5000],dept[['deptno','dname']][dept['deptno']==50],on='deptno')[['name','dname']]
       name     dname
0     Weiss  Shipping
1     Fripp  Shipping
2  Kaufling  Shipping
3   Vollman  Shipping
4   Mourgos  Shipping

또는

pd.merge(emp[(emp['sal']>=5000) & (emp['deptno']==50)][['name','sal','deptno']],dept[['deptno','dname']],on='deptno')
       name     sal  deptno     dname
0     Weiss  8000.0    50.0  Shipping
1     Fripp  8200.0    50.0  Shipping
2  Kaufling  7900.0    50.0  Shipping
3   Vollman  6500.0    50.0  Shipping
4   Mourgos  5800.0    50.0  Shipping







[162]
2002년도에 근무한 사원들의 이름, 급여, 입사일, 부서코드,부서이름을 출력하세요.


[Answer]
pd.merge(emp[emp['hire_date'].str.slice(0,4)=='2002'][['name','sal','hire_date','deptno']],dept[['deptno','dname']],on='deptno')
        name      sal   hire_date  deptno             dname
0  Greenberg  13208.8  2002-08-17   100.0           Finance
1     Faviet   9900.0  2002-08-16   100.0           Finance
2   Raphaely  11000.0  2002-12-07    30.0        Purchasing
3     Mavris   6500.0  2002-06-07    40.0   Human Resources
4       Baer  10000.0  2002-06-07    70.0  Public Relations
5    Higgins  12008.0  2002-06-07   110.0        Accounting
6      Gietz   8300.0  2002-06-07   110.0        Accounting


또는

from datetime import datetime

pd.merge(emp[pd.to_datetime(emp['hire_date']).dt.year==datetime.strptime('2002','%Y').year][['name','sal','hire_date','deptno']],dept[['deptno','dname']],on='deptno')
        name      sal   hire_date  deptno             dname
0  Greenberg  13208.8  2002-08-17   100.0           Finance
1     Faviet   9900.0  2002-08-16   100.0           Finance
2   Raphaely  11000.0  2002-12-07    30.0        Purchasing
3     Mavris   6500.0  2002-06-07    40.0   Human Resources
4       Baer  10000.0  2002-06-07    70.0  Public Relations
5    Higgins  12008.0  2002-06-07   110.0        Accounting
6      Gietz   8300.0  2002-06-07   110.0        Accounting



pd.to_datetime(emp['hire_date']).dt.year	# 각각의 row의 연도들

datetime.strptime('2002','%Y').year
2002

emp[pd.to_datetime(emp['hire_date']).dt.year==datetime.strptime('2002','%Y').year]
Out[354]: 
     empid       name         job   ...        sal comm  deptno
8      108  Greenberg      FI_MGR   ...    13208.8  NaN   100.0
9      109     Faviet  FI_ACCOUNT   ...     9900.0  NaN   100.0
14     114   Raphaely      PU_MAN   ...    11000.0  NaN    30.0
103    203     Mavris      HR_REP   ...     6500.0  NaN    40.0
104    204       Baer      PR_REP   ...    10000.0  NaN    70.0
105    205    Higgins      AC_MGR   ...    12008.0  NaN   110.0
106    206      Gietz  AC_ACCOUNT   ...     8300.0  NaN   110.0







[163]
직업이 AD_VP, AD_PRES 인 사원들의 이름, 급여, 직업, 부서코드, 부서이름 을 출력하세요.

[Answer]
pd.merge(emp[emp['job'].isin (['AD_VP','AD_PRES'])][['name','sal','job','deptno']],dept[['deptno','dname']],on='deptno')
      name      sal      job  deptno      dname
0     King  24000.0  AD_PRES    90.0  Executive
1  Kochhar  17000.0    AD_VP    90.0  Executive
2  De Haan  17000.0    AD_VP    90.0  Executive







[164]
부서이름별 총액 급여를 출력하세요.  


[Answer]
dept = DataFrame({'dname':['관리팀','마케팅팀','구매팀','인사팀','경영지원팀','기술지원팀','홍보팀','영업팀','기획팀','재무팀','회계팀']},index=[10,20,30,40,50,60,70,80,90,100,110])

pd.merge(emp[['sal','deptno']],dept,left_on='deptno',right_index=True).groupby(dept['dname']).sum()
           sal  deptno
dname                 
경영지원팀  10000.0    80.0
관리팀     8200.0   100.0
구매팀     2800.0    50.0
기술지원팀   7500.0    80.0
기획팀     2900.0    50.0
마케팅팀    8000.0    50.0
영업팀     3200.0    50.0
인사팀     2500.0    50.0
재무팀     4400.0    10.0
홍보팀     9600.0    80.0


pd.merge(emp[['sal','deptno']],dept,left_on='deptno',right_index=True).groupby(dept['dname']).sum().sort_values(by='deptno')
Out[389]: 
           sal  deptno
dname                 
재무팀     4400.0    10.0
구매팀     2800.0    50.0
기획팀     2900.0    50.0
마케팅팀    8000.0    50.0
영업팀     3200.0    50.0
인사팀     2500.0    50.0
경영지원팀  10000.0    80.0
기술지원팀   7500.0    80.0
홍보팀     9600.0    80.0
관리팀     8200.0   100.0


또는

from pandas import Series, DataFrame
import pandas as pd

emp = pd.read_csv("c:\data\emp_new.csv", names = ['empid','name','job','mgr','hire_date','sal','comm','deptno'])

dept = DataFrame({'dname':['관리팀','마케팅팀','구매팀','인사팀','경영지원팀','기술지원팀','홍보팀','영업팀','기획팀','재무팀','회계팀']},index=[10,20,30,40,50,60,70,80,90,100,110])

#-----------------------------------------------------------------------------#

# 시리즈와 데이터프레임은 merge 할 수 없음

<경우1> : 조인의 일량이 줄어듦 (그룹핑 한 것을 가지고 조인을 해주자)

dept_sal = emp['sal'].groupby(emp['deptno']).sum() # 시리즈 형임
dept_sal = DataFrame(dept_sal) # 데이터 프레임으로 형 바꿔주기
dept_sal = dept_sal.reindex([10,20,30,40,50,60,70,80,90,100,110])
dept_sal

pd.merge(dept, dept_sal, left_index = True, right_index = True)

pd.merge(dept, dept_sal, left_index = True, right_index = True)
Out[15]: 
     dname       sal
10     관리팀    4400.0
20    마케팅팀   19000.0
30     구매팀   24900.0
40     인사팀    6500.0
50   경영지원팀  156400.0
60   기술지원팀   28800.0
70     홍보팀   10000.0
80     영업팀  304500.0
90     기획팀   58000.0
100    재무팀   53708.8
110    회계팀   20308.0



<경우2> : 조인 다 한 후 그룹핑 하는 것

dept = DataFrame({'dname':['관리팀','마케팅팀','구매팀','인사팀','경영지원팀','기술지원팀','홍보팀','영업팀','기획팀','재무팀','회계팀']},index=[10,20,30,40,50,60,70,80,90,100,110])

dept

m = pd.merge(emp[['deptno','sal']], dept, left_on = 'deptno', right_index=True)
m
m['sal'].groupby(m['dname']).sum()

m['sal'].groupby(m['dname']).sum()
Out[18]: 
dname
경영지원팀    156400.0
관리팀        4400.0
구매팀       24900.0
기술지원팀     28800.0
기획팀       58000.0
마케팅팀      19000.0
영업팀      304500.0
인사팀        6500.0
재무팀       53708.8
홍보팀       10000.0
회계팀       20308.0
Name: sal, dtype: float64
