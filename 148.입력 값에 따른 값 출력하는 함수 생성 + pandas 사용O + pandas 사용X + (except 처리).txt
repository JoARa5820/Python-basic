[148]
부서번호를 입력하면 그 부서의 급여 총액을 구하는 함수를 생성하세요.

dept_sum_sal()
부서번호를 입력하세요 :  20
19000.0

dept_sum_sal()
부서번호를 입력하세요 :  30
24900.0


[Answer]
<판다스 이용 O>
def dept_sum_sal(x):
    print(emp['SALARY'][emp['DEPARTMENT_ID']==x].sum())


dept_sum_sal(20)
=> 19000



<판다스 이용 X>
def dept_sum_sal(x):
    
    import csv
    file = open('c:\data\emp.csv','r')
    emp_csv = csv.reader(file)
    next(emp_csv)
    
    sum=0
    
    for emp_list in emp_csv:
        if emp_list[10] == x:
            sum = sum + int(emp_list[7])
            
    print(sum) # 또는 return sum
    
    file.close()
    
dept_sum_sal('20')


또는		# x를 입력받는 것만 다름

def dept_sum_sal():
    x=input('부서번호를 입력하세요 : ')
    
    import csv
    file = open('c:\data\emp.csv','r')
    emp_csv = csv.reader(file)
    next(emp_csv)
    
    sum=0
    
    for emp_list in emp_csv:
        if emp_list[10] == x:
            sum = sum + int(emp_list[7])
            
    print(sum)
    
    file.close()
    
dept_sum_sal()







[149]
직업을 물어보게 하고 직업을 입력하면 해당 직업의 최고 급여를 출력되게 하는데 아무것도 입력하지 않으면 계속 물어보게하는 프로그램을 작성하세요.

job_max_sal()
직업을 입력하세요 ?  ST_CLERK
3600.0

job_max_sal()
직업을 입력하세요 ? sa_rep
11500.0

job_max_sal()

직업을 입력하세요 ? 

직업을 입력하세요 ? 

직업을 입력하세요 ? 

job_max_sal()
직업을 입력하세요 ? sales
해당 직업의 사원은 없습니다.



[Answer]
<판다스 이용 O>
import pandas as pd

def job_max_sal():
    try:
        emp = pd.read_csv("c:\data\emp_new.csv", names = ['empid','name','job','mgr','hire_date','sal','comm','deptno'])
        name = ''
        while name =='':
            name = input('직업을 입력하세요 ? ')
        maxsal = emp['sal'][emp['job'] == name.upper()].max()
        if pd.isnull(maxsal):
            raise Exception
        return maxsal
    except Exception as err:
        print ('해당 직업의 사원은 없습니다.')

job_max_sal()



<판다스 이용 X>
def job_max_sal():
    try:
        import  csv
        file = open("c:\data\emp_new.csv",'r')
        emp_csv = csv.reader(file)
        name = ''
        sal = []
        while name =='':
            name = input('직업을 입력하세요 ? ')
        
        for emp_list in emp_csv:
            if emp_list[2] == name.upper():
                sal.append(int(emp_list[5]))
        maxsal = max(sal)
        if maxsal=='':
            raise Exception
        return maxsal
    except Exception as err:
        print ('해당 직업의 사원은 없습니다.')

job_max_sal()
